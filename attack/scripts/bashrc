# shellcheck disable=SC2148
COLOUR_WHITE=$(tput setaf 7 :-"" 2>/dev/null)
COLOUR_RED=$(tput setaf 1 :-"" 2>/dev/null)
COLOUR_RESET=$(tput sgr0 :-"" 2>/dev/null)

BOLD=$(tput bold)
NORMAL=$(tput sgr0)

#
# Logging
#
warning() {
  [ "${*:-}" ] && ERROR="$*" || ERROR="Unknown Warning"
  printf "%s\\n" "${COLOUR_RED}${ERROR}${COLOUR_RESET}"
} 1>&2
readonly -f warning

info() {
  [ "${*:-}" ] && INFO="$*" || INFO="Unknown Info"
  printf "%s\\n" "${COLOUR_WHITE}${INFO}${COLOUR_RESET}"
} 1>&2
readonly -f info

#
# SSH helpers
#
attack_master() {
  # shellcheck disable=SC2086
  IFS=', ' read -r -a master  <<< "${MASTER_IP_ADDRESSES}"
  [[ $# = 0 ]] && warning "need a number"
  [[ "$1" -gt "${#master[@]}" ]] && "master does not exist"

  ssh root@"${master[$1]}"
}
readonly -f attack_master
export -f attack_master

attack_node() {
  IFS=', ' read -r -a node  <<< "${NODE_IP_ADDRESSES}"
  export node
  [[ $# = 0 ]] && warning "need a number"
  [[ "$1" -gt "${#node[@]}" ]] && "node does not exist"

  ssh root@"${node[$1]}"
}
readonly -f attack_node
export -f attack_node


#
# Display info message
#
welcome() {
  IFS=', ' read -r -a master  <<< "${MASTER_IP_ADDRESSES}"
  IFS=', ' read -r -a node  <<< "${NODE_IP_ADDRESSES}"
  info "You have made it inside the perimiter of a private kubernetes cluster."
  info "There are ${BOLD}${#master[@]}${NORMAL} master "      \
       "and ${BOLD}${#node[@]}${NORMAL} nodes in the cluster"
  info ' '
  info "We have setup helpers to attack the master(s) and node(s)."
  info ' '
  info "To attack a master:"
  info "  \$ attack_master 0"
  info ' '
  info "To attack a node:"
  info "  \$ attack_node 2"
  info ' '
  info "To see this message again:"
  info "  \$ welcome"
  info ' '
  envsubst < /challenge.txt
  info ' '
  info "Run start_task with the name of the task to get going"
  info "Getting stuck?  Run next_hint to see the next_hint.  You can run "
  info "show_hints at any time to see all the hints you've already revealed again"
}
readonly -f welcome
export -f welcome

attack-motd
welcome
