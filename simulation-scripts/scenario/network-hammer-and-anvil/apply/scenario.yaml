apiVersion: v1
kind: Namespace
metadata:
  name: network-hammer-and-anvil
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: network-hammer-and-anvil
spec:
  selector:
    matchLabels:
      app: frontend
      project: webapidb
  replicas: 2
  template:
    metadata:
      labels:
        app: frontend
        project: webapidb
    spec:
      containers:
      - name: ubuntu
        image: ubuntu
        env:
          - name: PGUSERNAME
            value: "postgres"
          - name: PGHOST
            value: "database"
          - name: PGPASSWORD
            value: "oopswrongpassword"
          - name: SSHHOST
            value: "database"
          - name: SSHPASSWORD
            value: "supersecretrootpassword"
        command: ["sleep"]
        args: ["infinity"]
        ports:
        - containerPort: 80
          name: external
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: network-hammer-and-anvil
spec:
  selector:
    matchLabels:
      app: db
      project: webapidb
  replicas: 1
  template:
    metadata:
      labels:
        app: db
        project: webapidb
    spec:
      containers:
      - name: postgres
        image: postgres:10.10
        env:
        - name: POSTGRES_PASSWORD
          value: "supersecretpostgrespassword"
        ports:
        - containerPort: 5432
          name: database
        volumeMounts:
        - name: db
          mountPath: "/docker-entrypoint-initdb.d"
          readOnly: true
        - name: file
          mountPath: "/backups"
      - name: ssh
        image: ubuntu
        env:
          - name: PGUSERNAME
            value: "postgres"
          - name: PGHOST
            value: "localhost"
        command: ["bash"]
        args: ["-c", "apt update && DEBIAN_FRONTEND=noninteractive apt install -y ssh postgresql postgresql-client && echo 'PermitEmptyPasswords yes' >> /etc/ssh/sshd_config && echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config && service ssh start && echo 'root:supersecretrootpassword' | chpasswd && sleep infinity"]
        ports:
        - containerPort: 22
          name: ssh
        volumeMounts:
        - name: file
          mountPath: "/backups"
      initContainers:
      - name: file
        image: ubuntu
        command:
        - dd
        - "if=/dev/zero"
        - "of=/work-dir/database.dat.old"
        - "count=1024"
        - "bs=1048576"
        volumeMounts:
        - name: file
          mountPath: "/work-dir"
      volumes:
      - name: db
        secret:
          secretName: database
      - name: file
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: database
  namespace: network-hammer-and-anvil
spec:
  type: ClusterIP
  selector:
    project: webapidb
    app: db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: "database"
      name: "database"
    - protocol: TCP
      port: 22
      targetPort: "ssh"
      name: "ssh"
---
apiVersion: v1
kind: Secret
metadata:
  name: database
  namespace: network-hammer-and-anvil
type: Opaque
data:
  secrets.sql: Q1JFQVRFIFRBQkxFIHBlcnNvbmFsZGF0YSAoCiAgaWQgU0VSSUFMIFVOSVFVRSBOT1QgTlVMTCwKICBuYW1lIFZBUkNIQVIoMTApIE5PVCBOVUxMLAogIGNyZWRpdGNhcmQgVEVYVCwKICBhZGRyZXNzIFRFWFQgTk9UIE5VTEwsCiAgcG9zdGNvZGUgVkFSQ0hBUig2KSBOT1QgTlVMTAopOwoKSU5TRVJUIElOVE8gcGVyc29uYWxkYXRhICgKICAgIG5hbWUsIGNyZWRpdGNhcmQsIGFkZHJlc3MsIHBvc3Rjb2RlCikKU0VMRUNUCiAgICBsZWZ0KG1kNShpOjp0ZXh0KSwgMTApLAogICAgbWQ1KHJhbmRvbSgpOjp0ZXh0KSwKICAgIG1kNShyYW5kb20oKTo6dGV4dCksCiAgICBsZWZ0KG1kNShyYW5kb20oKTo6dGV4dCksIDYpCkZST00gZ2VuZXJhdGVfc2VyaWVzKDEsIDEwMDAwMDApIHMoaSkK
