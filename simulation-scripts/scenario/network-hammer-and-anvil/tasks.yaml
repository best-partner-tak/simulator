kind: cp.simulator/scenario:1.0.0
objective: Use badly configured database to exfiltrate data.
starting-point:
  mode: pod
  pod-name: ""
  pod-namespace: network-hammer-and-anvil
tasks:
  "1":
    hints:
    - text: Is there anything useful in the env vars?
    - text: Those look like a host and password for a root SSH user!
    - text: I think Postgres doesn't need a password if you're reaching it from localhost.
    - text: I can use pg_dump get the data from the database.
    - text: I wonder if there are any mount points in this container.
    - text: Is there something there in /backups?
    - text: I have an IP and SSH key from the welcome text to this challenge, I can
        'scp' my data to there.
    sort-order: 1
    starting-point:
      mode: pod
      pod-name: ""
      pod-namespace: network-hammer-and-anvil
    summary: "We SSH'd into a sidecar container of a database pod after finding some credentials in our starting pod. From there we accessed the database directly and through a shared mount to exfiltrate some secret data."
  "2":
    hints:
    - text: The database shouldn't need to talk externally.
    - text: Only the frontend should have access to the database.
    - text: I wonder if a network policy would help here.
    sort-order: 2
    starting-point:
      kubectl-access: true
      mode: internal-instance
    summary: "We used a network policy to prevent the database from exfiltrating data and preventing SSH into the sidecar container."
