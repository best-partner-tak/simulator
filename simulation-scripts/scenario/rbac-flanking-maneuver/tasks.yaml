kind: cp.simulator/scenario:1.0.0
objective: SSH into vulnerable workload, wget secrets using permissive SA.
starting-point:
  kubectl-access: false
  mode: internal-instance
tasks:
  "1":
    hints:
    - text: Find open SSH port in workload. You can use nmap. Remember it runs on
        a NodePort.
    - text: The open NodePort was 30022. Brute force host SSH default password.
    - text: Username is admin and password is password.
    - text: Look around for credentials and tools. Can you hit the API?
    - text: Use wget to hit the API at default port 6443. The service account token
        looks like it can schedule workloads and get secrets.
    sort-order: 1
    starting-point:
      kubectl-access: false
      mode: internal-instance
    summary: "We brute forced access to an SSH pod in the cluster with an active node port and weak password. We then used the pods elevated permissions to get secrets."
  "2":
    hints:
    - text: What identity is assigned the pod?
    - text: Have a look at the roles and rolebindings.
    - text: Since the pod doesn't need to talk to the API, you can just delete the
        rolebinding.
    sort-order: 2
    starting-point:
      kubectl-access: true
      mode: internal-instance
    summary: "We removed the rolebinding giving elevated permissions to the pod."
  "3":
    hints:
    - text: Don't use passwords for SSH connections, and definitely not easy ones.
    sort-order: 3
    starting-point:
      mode: null
    summary: "We should not use passwords for SSH. Where we do need to use passwords we should not pick simple or obvious ones. "
