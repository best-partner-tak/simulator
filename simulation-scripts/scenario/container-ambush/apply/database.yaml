apiVersion: v1
kind: Namespace
metadata:
  name: container-ambush
---
apiVersion: v1
kind: Secret
metadata:
  name: database
  namespace: container-ambush
type: Opaque
data:
  secrets.sql: Q1JFQVRFIFRBQkxFIHNlY3JldHMgKHNlY3JldCAgICAgQ0hBUig1MCkgICAgICAgTk9UIE5VTEwpOwpJTlNFUlQgSU5UTyBzZWNyZXRzIFZBTFVFUyAoJ292ZXI5MDAwY3JlZGl0Y2FyZG51bWJlcnMnKTsK
---
apiVersion: v1
kind: Secret
metadata:
  name: db-pass
  namespace: container-ambush
type: Opaque
data:
  password: c3VwZXJTZWNyZXRQYXNzd29yZAo=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: jenkins
  name: jenkins
  namespace: container-ambush
spec:
  replicas: 1
  selector:
    matchLabels:
      name: jenkins
  template:
    metadata:
      labels:
        name: jenkins
    spec:
      containers:
      - image: nginx
        # image: vulnerables/cve-2014-6271
        imagePullPolicy: IfNotPresent
        name: jenkins
        ports:
        - containerPort: 80
        volumeMounts:
        - name: dockersock
          mountPath: "/var/run/docker.sock"
          readOnly: true
      volumes:
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: db
  namespace: container-ambush
spec:
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: postgres
        image: postgres
        ports:
        - containerPort: 5432
          name: database
        volumeMounts:
        - name: db
          mountPath: "/docker-entrypoint-initdb.d"
          readOnly: true
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-pass
              key: password
      volumes:
      - name: db
        secret:
          secretName: database
